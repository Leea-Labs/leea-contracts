name: Compile client-rs
on: push

defaults:
    run:
        working-directory: contracts/solana/client-rs

jobs:
  build:
    name: Build on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-musl
            binary: client-rs
            artifact_name: client-rs-linux-x86_64
          - os: ubuntu-latest
            arch: aarch64
            target: aarch64-unknown-linux-musl
            binary: client-rs
            artifact_name: client-rs-linux-aarch64
          - os: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
            binary: client-rs
            artifact_name: client-rs-macos-x86_64
          - os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin
            binary: client-rs
            artifact_name: client-rs-macos-aarch64
#          - os: windows-latest
#            arch: x86_64
#            target: x86_64-pc-windows-msvc
#            binary: client-rs.exe
#            artifact_name: client-rs-windows-x86_64
#          - os: windows-latest
#            arch: aarch64
#            target: aarch64-pc-windows-msvc
#            binary: client-rs.exe
#            artifact_name: client-rs-windows-aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - if: ${{ runner.os == 'Linux' && matrix.arch == 'x86_64' }}
        run: sudo apt-get update && sudo apt-get install -y musl-tools
      - if: ${{ runner.os == 'Linux' && matrix.arch == 'aarch64' }}
        run: cargo install cross
      - if: ${{ runner.os == 'Linux' && matrix.arch == 'aarch64' }}
        run: cross build --target ${{ matrix.target }} --release
      - if: ${{ !(runner.os == 'Linux' && matrix.arch == 'aarch64') }}
        run: cargo build --target ${{ matrix.target }} --release
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.binary }}
